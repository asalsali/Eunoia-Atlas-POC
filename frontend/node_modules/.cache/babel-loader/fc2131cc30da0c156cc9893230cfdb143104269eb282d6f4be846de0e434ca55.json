{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeferredPromise = exports.throwIfError = void 0;\nfunction throwIfError(call) {\n  var _a, _b, _c, _d, _e, _f;\n  const isFatalError = call.message !== undefined;\n  if (isFatalError) {\n    throw new Error(call.message);\n  }\n  const isError = call.next === undefined && ((_b = (_a = call) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.uuid) === undefined && ((_d = (_c = call) === null || _c === void 0 ? void 0 : _c.application) === null || _d === void 0 ? void 0 : _d.uuidv4) === undefined && ((_f = (_e = call) === null || _e === void 0 ? void 0 : _e.error) === null || _f === void 0 ? void 0 : _f.code) !== undefined;\n  if (isError) {\n    const e = call.error;\n    /**\n     * TODO:\n     *   add local error code list + descriptions?\n     *   (note: can be endpoint specific,)\n     */\n    throw new Error(`Error code ${e.code}, see XUMM Dev Console, reference: ${e.reference}`);\n  }\n}\nexports.throwIfError = throwIfError;\nclass DeferredPromise {\n  constructor() {\n    this.resolveFn = _arg => {\n      // Will be replaced by Promise fn\n    };\n    this.rejectFn = _arg => {\n      // Will be replaced by Promise fn\n    };\n    this.promise = new Promise((resolve, reject) => {\n      this.resolveFn = resolve;\n      this.rejectFn = reject;\n    });\n  }\n  resolve(arg) {\n    this.resolveFn(arg);\n    return this.promise;\n  }\n  reject(arg) {\n    this.rejectFn(arg);\n    return this.promise;\n  }\n}\nexports.DeferredPromise = DeferredPromise;","map":{"version":3,"names":["Object","defineProperty","exports","value","DeferredPromise","throwIfError","call","_a","_b","_c","_d","_e","_f","isFatalError","message","undefined","Error","isError","next","meta","uuid","application","uuidv4","error","code","e","reference","constructor","resolveFn","_arg","rejectFn","promise","Promise","resolve","reject","arg"],"sources":["C:/Users/Alex Salsali/Desktop/Eunoia-Atlas-POC/frontend/node_modules/xumm-sdk/dist/src/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeferredPromise = exports.throwIfError = void 0;\nfunction throwIfError(call) {\n    var _a, _b, _c, _d, _e, _f;\n    const isFatalError = call.message !== undefined;\n    if (isFatalError) {\n        throw new Error(call.message);\n    }\n    const isError = call.next === undefined\n        && ((_b = (_a = call) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.uuid) === undefined\n        && ((_d = (_c = call) === null || _c === void 0 ? void 0 : _c.application) === null || _d === void 0 ? void 0 : _d.uuidv4) === undefined\n        && ((_f = (_e = call) === null || _e === void 0 ? void 0 : _e.error) === null || _f === void 0 ? void 0 : _f.code) !== undefined;\n    if (isError) {\n        const e = call.error;\n        /**\n         * TODO:\n         *   add local error code list + descriptions?\n         *   (note: can be endpoint specific,)\n         */\n        throw new Error(`Error code ${e.code}, see XUMM Dev Console, reference: ${e.reference}`);\n    }\n}\nexports.throwIfError = throwIfError;\nclass DeferredPromise {\n    constructor() {\n        this.resolveFn = (_arg) => {\n            // Will be replaced by Promise fn\n        };\n        this.rejectFn = (_arg) => {\n            // Will be replaced by Promise fn\n        };\n        this.promise = new Promise((resolve, reject) => {\n            this.resolveFn = resolve;\n            this.rejectFn = reject;\n        });\n    }\n    resolve(arg) {\n        this.resolveFn(arg);\n        return this.promise;\n    }\n    reject(arg) {\n        this.rejectFn(arg);\n        return this.promise;\n    }\n}\nexports.DeferredPromise = DeferredPromise;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAGF,OAAO,CAACG,YAAY,GAAG,KAAK,CAAC;AACvD,SAASA,YAAYA,CAACC,IAAI,EAAE;EACxB,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EAC1B,MAAMC,YAAY,GAAGP,IAAI,CAACQ,OAAO,KAAKC,SAAS;EAC/C,IAAIF,YAAY,EAAE;IACd,MAAM,IAAIG,KAAK,CAACV,IAAI,CAACQ,OAAO,CAAC;EACjC;EACA,MAAMG,OAAO,GAAGX,IAAI,CAACY,IAAI,KAAKH,SAAS,IAChC,CAAC,CAACP,EAAE,GAAG,CAACD,EAAE,GAAGD,IAAI,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,IAAI,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,IAAI,MAAML,SAAS,IAC5H,CAAC,CAACL,EAAE,GAAG,CAACD,EAAE,GAAGH,IAAI,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,WAAW,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,MAAM,MAAMP,SAAS,IACrI,CAAC,CAACH,EAAE,GAAG,CAACD,EAAE,GAAGL,IAAI,MAAM,IAAI,IAAIK,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,KAAK,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,IAAI,MAAMT,SAAS;EACpI,IAAIE,OAAO,EAAE;IACT,MAAMQ,CAAC,GAAGnB,IAAI,CAACiB,KAAK;IACpB;AACR;AACA;AACA;AACA;IACQ,MAAM,IAAIP,KAAK,CAAC,cAAcS,CAAC,CAACD,IAAI,sCAAsCC,CAAC,CAACC,SAAS,EAAE,CAAC;EAC5F;AACJ;AACAxB,OAAO,CAACG,YAAY,GAAGA,YAAY;AACnC,MAAMD,eAAe,CAAC;EAClBuB,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,SAAS,GAAIC,IAAI,IAAK;MACvB;IAAA,CACH;IACD,IAAI,CAACC,QAAQ,GAAID,IAAI,IAAK;MACtB;IAAA,CACH;IACD,IAAI,CAACE,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC5C,IAAI,CAACN,SAAS,GAAGK,OAAO;MACxB,IAAI,CAACH,QAAQ,GAAGI,MAAM;IAC1B,CAAC,CAAC;EACN;EACAD,OAAOA,CAACE,GAAG,EAAE;IACT,IAAI,CAACP,SAAS,CAACO,GAAG,CAAC;IACnB,OAAO,IAAI,CAACJ,OAAO;EACvB;EACAG,MAAMA,CAACC,GAAG,EAAE;IACR,IAAI,CAACL,QAAQ,CAACK,GAAG,CAAC;IAClB,OAAO,IAAI,CAACJ,OAAO;EACvB;AACJ;AACA7B,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}