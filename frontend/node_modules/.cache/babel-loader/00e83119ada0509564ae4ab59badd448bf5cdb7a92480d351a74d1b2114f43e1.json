{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Salsali\\\\Desktop\\\\Eunoia-Atlas-POC\\\\frontend\\\\src\\\\components\\\\Predictive.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Predictive.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Predictive = () => {\n  _s();\n  const [medaScores, setMedaScores] = useState([]);\n  const [taraScores, setTaraScores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchScores = async () => {\n      try {\n        setLoading(true);\n        const [medaResponse, taraResponse] = await Promise.all([fetch('http://localhost:8000/scores/MEDA'), fetch('http://localhost:8000/scores/TARA')]);\n        if (!medaResponse.ok || !taraResponse.ok) {\n          throw new Error('Failed to fetch scores');\n        }\n        const medaData = await medaResponse.json();\n        const taraData = await taraResponse.json();\n        setMedaScores(medaData);\n        setTaraScores(taraData);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchScores();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predictive-loading\",\n      children: \"Loading predictive insights...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predictive-error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"predictive\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Predictive Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Top donors based on federated learning models\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predictive-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predictive-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"MEDA Top Donors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scores-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Donor Hash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Gift Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: medaScores.sort((a, b) => b.gift_count - a.gift_count).slice(0, 10).map((score, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"hash-cell\",\n                  children: [score.ph.substring(0, 16), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: score.gift_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predictive-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"TARA Top Donors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scores-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Donor Hash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Gift Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: taraScores.sort((a, b) => b.gift_count - a.gift_count).slice(0, 10).map((score, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"hash-cell\",\n                  children: [score.ph.substring(0, 16), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: score.gift_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Predictive, \"loC3iwLPxz/+X2JpftL5nmj++n8=\");\n_c = Predictive;\nexport default Predictive;\nvar _c;\n$RefreshReg$(_c, \"Predictive\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Predictive","_s","medaScores","setMedaScores","taraScores","setTaraScores","loading","setLoading","error","setError","fetchScores","medaResponse","taraResponse","Promise","all","fetch","ok","Error","medaData","json","taraData","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sort","a","b","gift_count","slice","map","score","index","ph","substring","_c","$RefreshReg$"],"sources":["C:/Users/Alex Salsali/Desktop/Eunoia-Atlas-POC/frontend/src/components/Predictive.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Predictive.css';\r\n\r\ninterface DonorScore {\r\n  ph: string;\r\n  gift_count: number;\r\n}\r\n\r\nconst Predictive: React.FC = () => {\r\n  const [medaScores, setMedaScores] = useState<DonorScore[]>([]);\r\n  const [taraScores, setTaraScores] = useState<DonorScore[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchScores = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [medaResponse, taraResponse] = await Promise.all([\r\n          fetch('http://localhost:8000/scores/MEDA'),\r\n          fetch('http://localhost:8000/scores/TARA')\r\n        ]);\r\n\r\n        if (!medaResponse.ok || !taraResponse.ok) {\r\n          throw new Error('Failed to fetch scores');\r\n        }\r\n\r\n        const medaData = await medaResponse.json();\r\n        const taraData = await taraResponse.json();\r\n\r\n        setMedaScores(medaData);\r\n        setTaraScores(taraData);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : 'An error occurred');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchScores();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"predictive-loading\">Loading predictive insights...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"predictive-error\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"predictive\">\r\n      <h2>Predictive Insights</h2>\r\n      <p>Top donors based on federated learning models</p>\r\n      \r\n      <div className=\"predictive-grid\">\r\n        <div className=\"predictive-section\">\r\n          <h3>MEDA Top Donors</h3>\r\n          <div className=\"scores-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Donor Hash</th>\r\n                  <th>Gift Count</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {medaScores\r\n                  .sort((a, b) => b.gift_count - a.gift_count)\r\n                  .slice(0, 10)\r\n                  .map((score, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"hash-cell\">{score.ph.substring(0, 16)}...</td>\r\n                      <td>{score.gift_count}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"predictive-section\">\r\n          <h3>TARA Top Donors</h3>\r\n          <div className=\"scores-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Donor Hash</th>\r\n                  <th>Gift Count</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {taraScores\r\n                  .sort((a, b) => b.gift_count - a.gift_count)\r\n                  .slice(0, 10)\r\n                  .map((score, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"hash-cell\">{score.ph.substring(0, 16)}...</td>\r\n                      <td>{score.gift_count}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Predictive; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}