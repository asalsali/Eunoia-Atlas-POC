{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Salsali\\\\Desktop\\\\Eunoia-Atlas-POC\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport Header from './components/Header';\nimport LandingPage from './components/LandingPage';\nimport CharityStaffView from './components/CharityStaffView';\nimport SuperAdminView from './components/SuperAdminView';\nimport Analytics from './components/Analytics';\nimport Predictive from './components/Predictive';\nimport DonorIntentForm from './components/DonorIntentForm';\nimport WhisperFlow from './components/WhisperFlow';\nimport RlusdDemo from './components/RlusdDemo';\nimport './App.css';\nimport { WalletProvider } from './context/WalletContext';\n\n// Component to handle role-based navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContent = () => {\n  _s();\n  const [userRole, setUserRole] = useState('donor');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Function to get the default route for each role\n  const getDefaultRoute = role => {\n    switch (role) {\n      case 'donor':\n        return '/';\n      case 'charity':\n        return '/charity';\n      case 'admin':\n        return '/admin';\n      default:\n        return '/';\n    }\n  };\n\n  // Function to check if current route is valid for the selected role\n  const isRouteValidForRole = (pathname, role) => {\n    const donorRoutes = ['/', '/donate-intent', '/whisper', '/demo-rlusd'];\n    const charityRoutes = ['/charity', '/analytics', '/predictive'];\n    const adminRoutes = ['/admin'];\n    switch (role) {\n      case 'donor':\n        return donorRoutes.includes(pathname);\n      case 'charity':\n        return charityRoutes.includes(pathname);\n      case 'admin':\n        return adminRoutes.includes(pathname);\n      default:\n        return false;\n    }\n  };\n\n  // Handle role change\n  const handleRoleChange = newRole => {\n    setUserRole(newRole);\n\n    // If current route is not valid for the new role, navigate to default route\n    if (!isRouteValidForRole(location.pathname, newRole)) {\n      navigate(getDefaultRoute(newRole));\n    }\n  };\n\n  // Effect to handle initial navigation based on role\n  useEffect(() => {\n    if (!isRouteValidForRole(location.pathname, userRole)) {\n      navigate(getDefaultRoute(userRole));\n    }\n  }, [userRole, location.pathname, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userRole: userRole,\n      setUserRole: handleRoleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LandingPage, {\n            userRole: userRole,\n            setUserRole: handleRoleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/donate-intent\",\n          element: /*#__PURE__*/_jsxDEV(DonorIntentForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/whisper\",\n          element: /*#__PURE__*/_jsxDEV(WhisperFlow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/demo-rlusd\",\n          element: /*#__PURE__*/_jsxDEV(RlusdDemo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/charity\",\n          element: /*#__PURE__*/_jsxDEV(CharityStaffView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/analytics\",\n          element: /*#__PURE__*/_jsxDEV(Analytics, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/predictive\",\n          element: /*#__PURE__*/_jsxDEV(Predictive, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(SuperAdminView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContent, \"f0mYb0y6xSBhAONuWnrfAH9Z9EQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n      children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","useLocation","Header","LandingPage","CharityStaffView","SuperAdminView","Analytics","Predictive","DonorIntentForm","WhisperFlow","RlusdDemo","WalletProvider","jsxDEV","_jsxDEV","AppContent","_s","userRole","setUserRole","navigate","location","getDefaultRoute","role","isRouteValidForRole","pathname","donorRoutes","charityRoutes","adminRoutes","includes","handleRoleChange","newRole","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/Alex Salsali/Desktop/Eunoia-Atlas-POC/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport Header from './components/Header';\nimport LandingPage from './components/LandingPage';\n\nimport DonationForm from './components/DonationForm';\nimport CharityStaffView from './components/CharityStaffView';\nimport SuperAdminView from './components/SuperAdminView';\n\nimport Analytics from './components/Analytics';\nimport Predictive from './components/Predictive';\nimport DonorIntentForm from './components/DonorIntentForm';\nimport WhisperFlow from './components/WhisperFlow';\nimport RlusdDemo from './components/RlusdDemo';\nimport './App.css';\nimport { WalletProvider } from './context/WalletContext';\n\n// Component to handle role-based navigation\nconst AppContent: React.FC = () => {\n  const [userRole, setUserRole] = useState<'donor' | 'charity' | 'admin'>('donor');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Function to get the default route for each role\n  const getDefaultRoute = (role: 'donor' | 'charity' | 'admin') => {\n    switch (role) {\n      case 'donor':\n        return '/';\n      case 'charity':\n        return '/charity';\n      case 'admin':\n        return '/admin';\n      default:\n        return '/';\n    }\n  };\n\n  // Function to check if current route is valid for the selected role\n  const isRouteValidForRole = (pathname: string, role: 'donor' | 'charity' | 'admin') => {\n    const donorRoutes = ['/', '/donate-intent', '/whisper', '/demo-rlusd'];\n    const charityRoutes = ['/charity', '/analytics', '/predictive'];\n    const adminRoutes = ['/admin'];\n\n    switch (role) {\n      case 'donor':\n        return donorRoutes.includes(pathname);\n      case 'charity':\n        return charityRoutes.includes(pathname);\n      case 'admin':\n        return adminRoutes.includes(pathname);\n      default:\n        return false;\n    }\n  };\n\n  // Handle role change\n  const handleRoleChange = (newRole: 'donor' | 'charity' | 'admin') => {\n    setUserRole(newRole);\n    \n    // If current route is not valid for the new role, navigate to default route\n    if (!isRouteValidForRole(location.pathname, newRole)) {\n      navigate(getDefaultRoute(newRole));\n    }\n  };\n\n  // Effect to handle initial navigation based on role\n  useEffect(() => {\n    if (!isRouteValidForRole(location.pathname, userRole)) {\n      navigate(getDefaultRoute(userRole));\n    }\n  }, [userRole, location.pathname, navigate]);\n\n  return (\n    <div className=\"App\">\n      <Header userRole={userRole} setUserRole={handleRoleChange} />\n      \n      <main className=\"main-content\">\n        <Routes>\n          {/* Unified Landing Page - now the main entry point */}\n          <Route path=\"/\" element={<LandingPage userRole={userRole} setUserRole={handleRoleChange} />} />\n          \n          {/* Donor Routes */}\n          <Route path=\"/donate-intent\" element={<DonorIntentForm />} />\n          <Route path=\"/whisper\" element={<WhisperFlow />} />\n          <Route path=\"/demo-rlusd\" element={<RlusdDemo />} />\n          \n          {/* Charity Routes */}\n          <Route path=\"/charity\" element={<CharityStaffView />} />\n          <Route path=\"/analytics\" element={<Analytics />} />\n          <Route path=\"/predictive\" element={<Predictive />} />\n          \n          {/* Admin Routes */}\n          <Route path=\"/admin\" element={<SuperAdminView />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <Router>\n      <WalletProvider>\n        <AppContent />\n      </WalletProvider>\n    </Router>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}