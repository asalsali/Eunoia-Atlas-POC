{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Salsali\\\\Desktop\\\\Eunoia-Atlas-POC\\\\frontend\\\\src\\\\components\\\\RlusdDemo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { checkUserPaymentStatus, userWalletStatus } from '../services/userWalletService';\nimport { submitDonorIntent, xamanCreatePayment } from '../services/api';\nimport { isCrossmarkAvailable, signRlusdPaymentWithCrossmark, connectCrossmark } from '../services/crossmarkService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEDA_ADDRESS = process.env.REACT_APP_MEDA_WALLET_ADDRESS || 'rEtpfxtsuHGWbRYFGszE5etYNPaiogDpxC';\nconst RlusdDemo = () => {\n  _s();\n  const [state, setState] = useState({\n    phase: 'idle'\n  });\n  const pollTimer = useRef(null);\n  const [crossmarkInfo, setCrossmarkInfo] = useState('');\n\n  // Clean up polling on unmount\n  useEffect(() => {\n    return () => {\n      if (pollTimer.current) window.clearInterval(pollTimer.current);\n    };\n  }, []);\n  const startPayment = async () => {\n    setState({\n      phase: 'creating'\n    });\n    try {\n      // Prefer server-side creation to avoid client SDK issues\n      const srv = await xamanCreatePayment({\n        destination: MEDA_ADDRESS,\n        amount: 1,\n        charity: 'MEDA',\n        cause_id: 'demo_meda_rlusd_1'\n      });\n      if (!srv.success || !srv.payloadId) {\n        setState({\n          phase: 'error',\n          message: srv.error || 'Failed to create payment payload'\n        });\n        return;\n      }\n      const next = {\n        phase: 'ready',\n        payloadId: srv.payloadId,\n        qrCode: srv.qrCode || '',\n        message: 'Scan to sign in Xaman'\n      };\n      setState(next);\n      if (pollTimer.current) window.clearInterval(pollTimer.current);\n      pollTimer.current = window.setInterval(async () => {\n        try {\n          const status = await checkUserPaymentStatus(next.payloadId);\n          if (status !== null && status !== void 0 && status.signed) {\n            if (pollTimer.current) window.clearInterval(pollTimer.current);\n            setState({\n              phase: 'completed',\n              txid: status === null || status === void 0 ? void 0 : status.transactionHash\n            });\n          }\n        } catch {}\n      }, 3000);\n    } catch (e) {\n      setState({\n        phase: 'error',\n        message: (e === null || e === void 0 ? void 0 : e.message) || 'Unexpected error'\n      });\n    }\n  };\n  const startCrossmark = async () => {\n    setState({\n      phase: 'creating'\n    });\n    try {\n      if (!isCrossmarkAvailable()) {\n        setState({\n          phase: 'error',\n          message: 'CROSSMARK extension not found'\n        });\n        return;\n      }\n      const conn = await connectCrossmark();\n      if (!conn.ok) {\n        setState({\n          phase: 'error',\n          message: conn.error || 'Failed to connect CROSSMARK'\n        });\n        return;\n      }\n      setCrossmarkInfo(`Connected: ${conn.address}${conn.network ? ' (' + conn.network + ')' : ''}`);\n      const res = await signRlusdPaymentWithCrossmark({\n        destination: MEDA_ADDRESS,\n        amount: 1,\n        charity: 'MEDA',\n        causeId: 'demo_meda_rlusd_1'\n      });\n      if (res.ok && res.txid) {\n        setState({\n          phase: 'completed',\n          txid: res.txid\n        });\n      } else {\n        setState({\n          phase: 'error',\n          message: res.error || 'Signing failed'\n        });\n      }\n    } catch (e) {\n      setState({\n        phase: 'error',\n        message: (e === null || e === void 0 ? void 0 : e.message) || 'CROSSMARK flow failed'\n      });\n    }\n  };\n  const startXrpXaman = async () => {\n    setState({\n      phase: 'creating'\n    });\n    try {\n      const srv = await xamanCreatePayment({\n        destination: MEDA_ADDRESS,\n        amount: 1,\n        charity: 'MEDA',\n        cause_id: 'demo_xrp_to_meda',\n        asset: 'XRP'\n      });\n      if (!srv.success || !srv.payloadId) {\n        setState({\n          phase: 'error',\n          message: srv.error || 'Failed to create XRP payment payload'\n        });\n        return;\n      }\n      const next = {\n        phase: 'ready',\n        payloadId: srv.payloadId,\n        qrCode: srv.qrCode || '',\n        message: 'Scan to sign 1 XRP in Xaman'\n      };\n      setState(next);\n      if (pollTimer.current) window.clearInterval(pollTimer.current);\n      pollTimer.current = window.setInterval(async () => {\n        try {\n          const status = await checkUserPaymentStatus(next.payloadId);\n          if (status !== null && status !== void 0 && status.signed) {\n            if (pollTimer.current) window.clearInterval(pollTimer.current);\n            setState({\n              phase: 'completed',\n              txid: status === null || status === void 0 ? void 0 : status.transactionHash\n            });\n          }\n        } catch {}\n      }, 3000);\n    } catch (e) {\n      setState({\n        phase: 'error',\n        message: (e === null || e === void 0 ? void 0 : e.message) || 'Unexpected error'\n      });\n    }\n  };\n  const sendWithPlatformWallet = async () => {\n    try {\n      setState({\n        phase: 'creating'\n      });\n      const resp = await submitDonorIntent({\n        donorIntent: 'Demo: 1 RLUSD to MEDA (platform wallet)',\n        amountFiat: 1,\n        currency: 'CAD',\n        donorEmail: '',\n        isPublic: false\n      });\n      if (resp !== null && resp !== void 0 && resp.transactionHash || resp !== null && resp !== void 0 && resp.transactionUrl) {\n        setState({\n          phase: 'completed',\n          txid: resp.transactionHash\n        });\n      } else {\n        setState({\n          phase: 'error',\n          message: (resp === null || resp === void 0 ? void 0 : resp.message) || 'No transaction returned'\n        });\n      }\n    } catch (e) {\n      setState({\n        phase: 'error',\n        message: (e === null || e === void 0 ? void 0 : e.message) || 'Failed to send payment'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 640,\n      margin: '40px auto',\n      padding: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RLUSD Demo: Send 1 RLUSD to MEDA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        opacity: 0.8\n      },\n      children: \"You can either have the platform wallet send 1 RLUSD on your behalf (server-signed), or create a XUMM payload to sign from your own wallet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '12px 0',\n        padding: 12,\n        borderRadius: 8,\n        background: userWalletStatus.isAvailable ? '#e8fff1' : '#fff6e6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Wallet status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), \" \", userWalletStatus.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), state.phase === 'idle' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 12,\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendWithPlatformWallet,\n        style: {\n          padding: '10px 16px',\n          fontWeight: 600\n        },\n        children: \"Send with Platform Wallet (Server-signed)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startPayment,\n        style: {\n          padding: '10px 16px',\n          fontWeight: 600\n        },\n        children: \"Create Xaman Payment (RLUSD, Server QR)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startXrpXaman,\n        style: {\n          padding: '10px 16px',\n          fontWeight: 600\n        },\n        children: \"Create Xaman Payment (1 XRP \\u2192 MEDA)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCrossmark,\n        style: {\n          padding: '10px 16px',\n          fontWeight: 600\n        },\n        disabled: !isCrossmarkAvailable(),\n        children: isCrossmarkAvailable() ? 'Sign with CROSSMARK (Browser)' : 'CROSSMARK not detected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), state.phase === 'creating' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Creating payment request\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 38\n    }, this), crossmarkInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8,\n        fontSize: 12,\n        opacity: 0.8\n      },\n      children: crossmarkInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), state.phase === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#b91c1c',\n        marginTop: 12\n      },\n      children: [\"Error: \", state.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), state.phase === 'ready' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan this QR in Xaman to complete the payment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), state.qrCode ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: state.qrCode,\n        alt: \"Xaman QR\",\n        style: {\n          width: 240,\n          height: 240,\n          borderRadius: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://xumm.app/sign/${state.payloadId}`,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: \"Open in Xaman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          opacity: 0.8\n        },\n        children: state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), state.phase === 'completed' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Payment Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), state.txid ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://testnet.xrpl.org/transactions/${state.txid}`,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: \"View transaction on XRPL Testnet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Signed. Waiting for transaction hash\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(RlusdDemo, \"UHMGWurHs1I+CzZ0FZTr+2txLL4=\");\n_c = RlusdDemo;\nexport default RlusdDemo;\nvar _c;\n$RefreshReg$(_c, \"RlusdDemo\");","map":{"version":3,"names":["React","useEffect","useRef","useState","checkUserPaymentStatus","userWalletStatus","submitDonorIntent","xamanCreatePayment","isCrossmarkAvailable","signRlusdPaymentWithCrossmark","connectCrossmark","jsxDEV","_jsxDEV","MEDA_ADDRESS","process","env","REACT_APP_MEDA_WALLET_ADDRESS","RlusdDemo","_s","state","setState","phase","pollTimer","crossmarkInfo","setCrossmarkInfo","current","window","clearInterval","startPayment","srv","destination","amount","charity","cause_id","success","payloadId","message","error","next","qrCode","setInterval","status","signed","txid","transactionHash","e","startCrossmark","conn","ok","address","network","res","causeId","startXrpXaman","asset","sendWithPlatformWallet","resp","donorIntent","amountFiat","currency","donorEmail","isPublic","transactionUrl","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","opacity","borderRadius","background","isAvailable","display","flexDirection","gap","flexWrap","onClick","fontWeight","disabled","marginTop","fontSize","color","src","alt","width","height","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/Alex Salsali/Desktop/Eunoia-Atlas-POC/frontend/src/components/RlusdDemo.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { createUserDonationPayload, checkUserPaymentStatus, userWalletStatus } from '../services/userWalletService';\nimport { submitDonorIntent, xamanCreatePayment } from '../services/api';\nimport { isCrossmarkAvailable, signRlusdPaymentWithCrossmark, connectCrossmark } from '../services/crossmarkService';\n\ntype PaymentState =\n  | { phase: 'idle' }\n  | { phase: 'creating' }\n  | { phase: 'ready'; payloadId: string; qrCode: string; message?: string }\n  | { phase: 'completed'; txid?: string }\n  | { phase: 'error'; message: string };\n\nconst MEDA_ADDRESS = process.env.REACT_APP_MEDA_WALLET_ADDRESS || 'rEtpfxtsuHGWbRYFGszE5etYNPaiogDpxC';\n\nconst RlusdDemo: React.FC = () => {\n  const [state, setState] = useState<PaymentState>({ phase: 'idle' });\n  const pollTimer = useRef<number | null>(null);\n  const [crossmarkInfo, setCrossmarkInfo] = useState<string>('');\n\n  // Clean up polling on unmount\n  useEffect(() => {\n    return () => {\n      if (pollTimer.current) window.clearInterval(pollTimer.current);\n    };\n  }, []);\n\n  const startPayment = async () => {\n    setState({ phase: 'creating' });\n    try {\n      // Prefer server-side creation to avoid client SDK issues\n      const srv = await xamanCreatePayment({\n        destination: MEDA_ADDRESS,\n        amount: 1,\n        charity: 'MEDA',\n        cause_id: 'demo_meda_rlusd_1'\n      });\n\n      if (!srv.success || !srv.payloadId) {\n        setState({ phase: 'error', message: srv.error || 'Failed to create payment payload' });\n        return;\n      }\n\n      const next = { phase: 'ready' as const, payloadId: srv.payloadId, qrCode: srv.qrCode || '', message: 'Scan to sign in Xaman' };\n      setState(next);\n\n      if (pollTimer.current) window.clearInterval(pollTimer.current);\n      pollTimer.current = window.setInterval(async () => {\n        try {\n          const status = await checkUserPaymentStatus(next.payloadId);\n          if (status?.signed) {\n            if (pollTimer.current) window.clearInterval(pollTimer.current);\n            setState({ phase: 'completed', txid: status?.transactionHash });\n          }\n        } catch {}\n      }, 3000) as unknown as number;\n    } catch (e: any) {\n      setState({ phase: 'error', message: e?.message || 'Unexpected error' });\n    }\n  };\n\n  const startCrossmark = async () => {\n    setState({ phase: 'creating' });\n    try {\n      if (!isCrossmarkAvailable()) {\n        setState({ phase: 'error', message: 'CROSSMARK extension not found' });\n        return;\n      }\n      const conn = await connectCrossmark();\n      if (!conn.ok) {\n        setState({ phase: 'error', message: conn.error || 'Failed to connect CROSSMARK' });\n        return;\n      }\n      setCrossmarkInfo(`Connected: ${conn.address}${conn.network ? ' (' + conn.network + ')' : ''}`);\n      const res = await signRlusdPaymentWithCrossmark({\n        destination: MEDA_ADDRESS,\n        amount: 1,\n        charity: 'MEDA',\n        causeId: 'demo_meda_rlusd_1'\n      });\n      if (res.ok && res.txid) {\n        setState({ phase: 'completed', txid: res.txid });\n      } else {\n        setState({ phase: 'error', message: res.error || 'Signing failed' });\n      }\n    } catch (e: any) {\n      setState({ phase: 'error', message: e?.message || 'CROSSMARK flow failed' });\n    }\n  };\n\n  const startXrpXaman = async () => {\n    setState({ phase: 'creating' });\n    try {\n      const srv = await xamanCreatePayment({\n        destination: MEDA_ADDRESS,\n        amount: 1,\n        charity: 'MEDA',\n        cause_id: 'demo_xrp_to_meda',\n        asset: 'XRP'\n      });\n      if (!srv.success || !srv.payloadId) {\n        setState({ phase: 'error', message: srv.error || 'Failed to create XRP payment payload' });\n        return;\n      }\n      const next = { phase: 'ready' as const, payloadId: srv.payloadId, qrCode: srv.qrCode || '', message: 'Scan to sign 1 XRP in Xaman' };\n      setState(next);\n\n      if (pollTimer.current) window.clearInterval(pollTimer.current);\n      pollTimer.current = window.setInterval(async () => {\n        try {\n          const status = await checkUserPaymentStatus(next.payloadId);\n          if (status?.signed) {\n            if (pollTimer.current) window.clearInterval(pollTimer.current);\n            setState({ phase: 'completed', txid: status?.transactionHash });\n          }\n        } catch {}\n      }, 3000) as unknown as number;\n    } catch (e: any) {\n      setState({ phase: 'error', message: e?.message || 'Unexpected error' });\n    }\n  };\n\n  const sendWithPlatformWallet = async () => {\n    try {\n      setState({ phase: 'creating' });\n      const resp = await submitDonorIntent({\n        donorIntent: 'Demo: 1 RLUSD to MEDA (platform wallet)',\n        amountFiat: 1,\n        currency: 'CAD',\n        donorEmail: '',\n        isPublic: false,\n      });\n      if (resp?.transactionHash || resp?.transactionUrl) {\n        setState({ phase: 'completed', txid: resp.transactionHash });\n      } else {\n        setState({ phase: 'error', message: resp?.message || 'No transaction returned' });\n      }\n    } catch (e: any) {\n      setState({ phase: 'error', message: e?.message || 'Failed to send payment' });\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: 640, margin: '40px auto', padding: 24 }}>\n      <h1>RLUSD Demo: Send 1 RLUSD to MEDA</h1>\n      <p style={{ opacity: 0.8 }}>\n        You can either have the platform wallet send 1 RLUSD on your behalf (server-signed), or create a XUMM payload to sign from your own wallet.\n      </p>\n\n      <div style={{ margin: '12px 0', padding: 12, borderRadius: 8, background: userWalletStatus.isAvailable ? '#e8fff1' : '#fff6e6' }}>\n        <strong>Wallet status:</strong> {userWalletStatus.message}\n      </div>\n\n      {state.phase === 'idle' && (\n        <div style={{ display: 'flex', flexDirection: 'column', gap: 12, flexWrap: 'wrap' }}>\n          <button onClick={sendWithPlatformWallet} style={{ padding: '10px 16px', fontWeight: 600 }}>Send with Platform Wallet (Server-signed)</button>\n          <button onClick={startPayment} style={{ padding: '10px 16px', fontWeight: 600 }}>Create Xaman Payment (RLUSD, Server QR)</button>\n          <button onClick={startXrpXaman} style={{ padding: '10px 16px', fontWeight: 600 }}>Create Xaman Payment (1 XRP → MEDA)</button>\n          <button onClick={startCrossmark} style={{ padding: '10px 16px', fontWeight: 600 }} disabled={!isCrossmarkAvailable()}>\n            {isCrossmarkAvailable() ? 'Sign with CROSSMARK (Browser)' : 'CROSSMARK not detected'}\n          </button>\n        </div>\n      )}\n      {state.phase === 'creating' && <div>Creating payment request…</div>}\n      {crossmarkInfo && (\n        <div style={{ marginTop: 8, fontSize: 12, opacity: 0.8 }}>{crossmarkInfo}</div>\n      )}\n      {state.phase === 'error' && (\n        <div style={{ color: '#b91c1c', marginTop: 12 }}>Error: {state.message}</div>\n      )}\n      {state.phase === 'ready' && (\n        <div style={{ marginTop: 16 }}>\n          <p>Scan this QR in Xaman to complete the payment:</p>\n          {state.qrCode ? (\n            <img src={state.qrCode} alt=\"Xaman QR\" style={{ width: 240, height: 240, borderRadius: 8 }} />\n          ) : (\n            <a href={`https://xumm.app/sign/${state.payloadId}`} target=\"_blank\" rel=\"noreferrer\">Open in Xaman</a>\n          )}\n          <div style={{ marginTop: 12, opacity: 0.8 }}>{state.message}</div>\n        </div>\n      )}\n      {state.phase === 'completed' && (\n        <div style={{ marginTop: 16 }}>\n          <h3>Payment Completed</h3>\n          {state.txid ? (\n            <a href={`https://testnet.xrpl.org/transactions/${state.txid}`} target=\"_blank\" rel=\"noreferrer\">\n              View transaction on XRPL Testnet\n            </a>\n          ) : (\n            <p>Signed. Waiting for transaction hash…</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RlusdDemo;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}