{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Salsali\\\\Desktop\\\\Eunoia-Atlas-POC\\\\frontend\\\\src\\\\context\\\\WalletContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { connectCrossmark, isCrossmarkAvailable } from '../services/crossmarkService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletContext = /*#__PURE__*/createContext(undefined);\nconst STORAGE_KEY = 'eunoia_wallet_state_v1';\nexport const WalletProvider = ({\n  children\n}) => {\n  _s();\n  const [state, setState] = useState(() => {\n    try {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      if (raw) return JSON.parse(raw);\n    } catch {}\n    return {\n      provider: 'NONE'\n    };\n  });\n  useEffect(() => {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n    } catch {}\n  }, [state]);\n  const handleConnectCrossmark = async () => {\n    if (!isCrossmarkAvailable()) throw new Error('CROSSMARK extension not found');\n    const resp = await connectCrossmark();\n    if (!resp.ok || !resp.address) throw new Error(resp.error || 'Failed to connect');\n    setState({\n      provider: 'CROSSMARK',\n      address: resp.address,\n      network: resp.network || 'testnet'\n    });\n  };\n  const disconnect = () => setState({\n    provider: 'NONE'\n  });\n  const value = useMemo(() => ({\n    provider: state.provider,\n    address: state.address,\n    network: state.network,\n    connectCrossmark: handleConnectCrossmark,\n    disconnect\n  }), [state]);\n  return /*#__PURE__*/_jsxDEV(WalletContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletProvider, \"hy7VlKVvKoexdYeOTL478BZ183A=\");\n_c = WalletProvider;\nexport const useWallet = () => {\n  _s2();\n  const ctx = useContext(WalletContext);\n  if (!ctx) throw new Error('useWallet must be used within WalletProvider');\n  return ctx;\n};\n_s2(useWallet, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"WalletProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","connectCrossmark","isCrossmarkAvailable","jsxDEV","_jsxDEV","WalletContext","undefined","STORAGE_KEY","WalletProvider","children","_s","state","setState","raw","localStorage","getItem","JSON","parse","provider","setItem","stringify","handleConnectCrossmark","Error","resp","ok","address","error","network","disconnect","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWallet","_s2","ctx","$RefreshReg$"],"sources":["C:/Users/Alex Salsali/Desktop/Eunoia-Atlas-POC/frontend/src/context/WalletContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { connectCrossmark, isCrossmarkAvailable } from '../services/crossmarkService';\r\n\r\ntype WalletProviderName = 'CROSSMARK' | 'XAMAN' | 'NONE';\r\n\r\ninterface WalletState {\r\n  address?: string;\r\n  network?: string;\r\n  provider: WalletProviderName;\r\n}\r\n\r\ninterface WalletContextValue extends WalletState {\r\n  connectCrossmark: () => Promise<void>;\r\n  disconnect: () => void;\r\n}\r\n\r\nconst WalletContext = createContext<WalletContextValue | undefined>(undefined);\r\n\r\nconst STORAGE_KEY = 'eunoia_wallet_state_v1';\r\n\r\nexport const WalletProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [state, setState] = useState<WalletState>(() => {\r\n    try {\r\n      const raw = localStorage.getItem(STORAGE_KEY);\r\n      if (raw) return JSON.parse(raw);\r\n    } catch {}\r\n    return { provider: 'NONE' };\r\n  });\r\n\r\n  useEffect(() => {\r\n    try { localStorage.setItem(STORAGE_KEY, JSON.stringify(state)); } catch {}\r\n  }, [state]);\r\n\r\n  const handleConnectCrossmark = async () => {\r\n    if (!isCrossmarkAvailable()) throw new Error('CROSSMARK extension not found');\r\n    const resp = await connectCrossmark();\r\n    if (!resp.ok || !resp.address) throw new Error(resp.error || 'Failed to connect');\r\n    setState({ provider: 'CROSSMARK', address: resp.address, network: resp.network || 'testnet' });\r\n  };\r\n\r\n  const disconnect = () => setState({ provider: 'NONE' });\r\n\r\n  const value = useMemo<WalletContextValue>(() => ({\r\n    provider: state.provider,\r\n    address: state.address,\r\n    network: state.network,\r\n    connectCrossmark: handleConnectCrossmark,\r\n    disconnect,\r\n  }), [state]);\r\n\r\n  return (\r\n    <WalletContext.Provider value={value}>{children}</WalletContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useWallet = (): WalletContextValue => {\r\n  const ctx = useContext(WalletContext);\r\n  if (!ctx) throw new Error('useWallet must be used within WalletProvider');\r\n  return ctx;\r\n};\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACtF,SAASC,gBAAgB,EAAEC,oBAAoB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAetF,MAAMC,aAAa,gBAAGT,aAAa,CAAiCU,SAAS,CAAC;AAE9E,MAAMC,WAAW,GAAG,wBAAwB;AAE5C,OAAO,MAAMC,cAAuD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAc,MAAM;IACpD,IAAI;MACF,MAAMa,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACR,WAAW,CAAC;MAC7C,IAAIM,GAAG,EAAE,OAAOG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC;IACjC,CAAC,CAAC,MAAM,CAAC;IACT,OAAO;MAAEK,QAAQ,EAAE;IAAO,CAAC;EAC7B,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACd,IAAI;MAAEgB,YAAY,CAACK,OAAO,CAACZ,WAAW,EAAES,IAAI,CAACI,SAAS,CAACT,KAAK,CAAC,CAAC;IAAE,CAAC,CAAC,MAAM,CAAC;EAC3E,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMU,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAACnB,oBAAoB,CAAC,CAAC,EAAE,MAAM,IAAIoB,KAAK,CAAC,+BAA+B,CAAC;IAC7E,MAAMC,IAAI,GAAG,MAAMtB,gBAAgB,CAAC,CAAC;IACrC,IAAI,CAACsB,IAAI,CAACC,EAAE,IAAI,CAACD,IAAI,CAACE,OAAO,EAAE,MAAM,IAAIH,KAAK,CAACC,IAAI,CAACG,KAAK,IAAI,mBAAmB,CAAC;IACjFd,QAAQ,CAAC;MAAEM,QAAQ,EAAE,WAAW;MAAEO,OAAO,EAAEF,IAAI,CAACE,OAAO;MAAEE,OAAO,EAAEJ,IAAI,CAACI,OAAO,IAAI;IAAU,CAAC,CAAC;EAChG,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAMhB,QAAQ,CAAC;IAAEM,QAAQ,EAAE;EAAO,CAAC,CAAC;EAEvD,MAAMW,KAAK,GAAG9B,OAAO,CAAqB,OAAO;IAC/CmB,QAAQ,EAAEP,KAAK,CAACO,QAAQ;IACxBO,OAAO,EAAEd,KAAK,CAACc,OAAO;IACtBE,OAAO,EAAEhB,KAAK,CAACgB,OAAO;IACtB1B,gBAAgB,EAAEoB,sBAAsB;IACxCO;EACF,CAAC,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;EAEZ,oBACEP,OAAA,CAACC,aAAa,CAACyB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAAEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAyB,CAAC;AAE7E,CAAC;AAACxB,EAAA,CAjCWF,cAAuD;AAAA2B,EAAA,GAAvD3B,cAAuD;AAmCpE,OAAO,MAAM4B,SAAS,GAAGA,CAAA,KAA0B;EAAAC,GAAA;EACjD,MAAMC,GAAG,GAAGzC,UAAU,CAACQ,aAAa,CAAC;EACrC,IAAI,CAACiC,GAAG,EAAE,MAAM,IAAIhB,KAAK,CAAC,8CAA8C,CAAC;EACzE,OAAOgB,GAAG;AACZ,CAAC;AAACD,GAAA,CAJWD,SAAS;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}